library(readxl)
cases_table <- read_excel("data_repo/germany/2018-12-28_germany_merger_cases.xlsx",
sheet = "Sheet1", col_types = c("blank",
"text", "text", "text", "text", "text",
"text"))
View(cases_table)
bka_data <- cases_table
names(bka_data)
bka_data$case_page[1]
page <- "https://www.bundeskartellamt.de/SharedDocs/Entscheidung/EN/Fallberichte/Fusionskontrolle/2018/B2-106-18.html;jsessionid=2CC9C0862CD088D94CE22E814899CFF9.2_cid371"
page %>%
read_html() %>%
html_node(".FTpdf") %>%
html_attr("href")
page %>%
read_html() %>%
html_node(".FTpdf") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/" ,.)
## set the base page
query_url <- "https://www.bundeskartellamt.de/SiteGlobals/Forms/Suche/Entscheidungssuche_Formular.html?nn=3590440&cl2Categories_Format=Entscheidungen&cl2Categories_Arbeitsbereich=Fusionskontrolle&docId=3590288"
query_url %>%
read_html() %>%
html_nodes("#searchResultIndex li:nth-child(3) a , #searchResultIndex li:nth-child(2) a") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/", .) %>%
c(query_url, .)
query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text()
## set the base page
query_url <- "https://www.bundeskartellamt.de/SiteGlobals/Forms/Suche/Entscheidungssuche_Formular.html?nn=3590440&cl2Categories_Format=Entscheidungen&cl2Categories_Arbeitsbereich=Fusionskontrolle&docId=3590288"
query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text()
## set the base page
query_url <- "https://www.bundeskartellamt.de/SiteGlobals/Forms/Suche/Entscheidungssuche_Formular.html?nn=3589936&cl2Categories_Format=Entscheidungen&gts=3598628_list%253Dheader_text_sort%252Basc&cl2Categories_Arbeitsbereich=Fusionskontrolle&resultsPerPage=45&sortOrder=score+desc%2C+dateOfIssue_dt+desc"
query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric()
query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric() %>%
which.max(.) %>%
c(1:.)
query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric() %>%
unique() %>%
which.max(.) %>%
c(1:.)
query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric() %>%
unique()
query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric() %>%
unique() %>%
max(.)
query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric() %>%
unique() %>%
max(.) %>%
c(1:.)
c(1:query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric() %>%
unique() %>%
max(.))
query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric() %>%
max(.) %>%
c(1:.)
query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric() %>%
max(.) %>%
seq_len(.)
query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric() %>%
max(.) %>%
seq_len(.) %>%
paste0("https://www.bundeskartellamt.de/SiteGlobals/Forms/Suche/Entscheidungssuche_Formular.html?nn=3589936&cl2Categories_Format=Entscheidungen&gts=3598628_list%253Dheader_text_sort%252Basc&gtp=3598628_list%253D", .,"&cl2Categories_Arbeitsbereich=Fusionskontrolle&resultsPerPage=45&sortOrder=score+desc%2C+dateOfIssue_dt+desc")
## subpage vector
# page number vector
subpages_url <- query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric() %>%
max(.) %>%
seq_len(.) %>%
paste0("https://www.bundeskartellamt.de/SiteGlobals/Forms/Suche/Entscheidungssuche_Formular.html?nn=3589936&cl2Categories_Format=Entscheidungen&gts=3598628_list%253Dheader_text_sort%252Basc&gtp=3598628_list%253D", .,"&cl2Categories_Arbeitsbereich=Fusionskontrolle&resultsPerPage=45&sortOrder=score+desc%2C+dateOfIssue_dt+desc")
page <- subpages_url[1]
output <- page %>%
read_html() %>%
html_node("#searchResultTable") %>%
html_table() %>%
as_tibble() %>%
mutate(case_page = page %>%
read_html() %>%
html_nodes("td a") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/" ,.) %>%
str_trim()) %>%
rename(case_id = Reference, case_summary = "Short subject", date = Date, product_market = "Product markets", decision = "Type of decision")
page %>%
read_html() %>%
html_node("#searchResultTable") %>%
html_table() %>%
as_tibble() %>%
mutate(case_page = page %>%
read_html() %>%
html_nodes("td a") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/" ,.) %>%
str_trim())
page %>%
read_html() %>%
html_node("#searchResultTable") %>%
html_table() %>%
as_tibble() %>%
mutate(case_page = page %>%
read_html() %>%
html_nodes("td a") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/" ,.) %>%
str_trim()) %>%
set_name(c("case_id", "case_summary", "date", "product_market", "decision", "case_page"))
page %>%
read_html() %>%
html_node("#searchResultTable") %>%
html_table() %>%
as_tibble() %>%
mutate(case_page = page %>%
read_html() %>%
html_nodes("td a") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/" ,.) %>%
str_trim()) %>%
set_names(c("case_id", "case_summary", "date", "product_market", "decision", "case_page"))
### extract the cases from the table
output <- page %>%
read_html() %>%
html_node("#searchResultTable") %>%
html_table() %>%
as_tibble() %>%
mutate(case_page = page %>%
read_html() %>%
html_nodes("td a") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/" ,.) %>%
str_trim()) %>%
set_names(c("case_id", "case_summary", "date", "product_market", "decision", "case_page"))
map2_chr(output$case_page, output$case_id, function(page, id){
print(paste0("Scraping case: ", id))
decision_url <- try(page %>%
read_html() %>%
html_node(".FTpdf") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/" ,.), silent = TRUE)
return(decision_url)
})
### scrape the case table
cases_table <- map_df(subpages_url, function(page){
### extract the cases from the table
output <- page %>%
read_html() %>%
html_node("#searchResultTable") %>%
html_table() %>%
as_tibble() %>%
mutate(case_page = page %>%
read_html() %>%
html_nodes("td a") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/" ,.) %>%
str_trim()) %>%
set_names(c("case_id", "case_summary", "date", "product_market", "decision", "case_page"))
### go to each case page and extract the decision text url
output$decision_url <- map2_chr(output$case_page, output$case_id, function(page, id){
print(paste0("Scraping case: ", id))
decision_url <- try(page %>%
read_html() %>%
html_node(".FTpdf") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/" ,.), silent = TRUE)
return(decision_url)
Sys.sleep(runif(2,1,3))
})
return(output)
})
### scrape the case table
cases_table <- map_df(subpages_url, function(page){
### extract the cases from the table
output <- page %>%
read_html() %>%
html_node("#searchResultTable") %>%
html_table() %>%
as_tibble() %>%
mutate(case_page = page %>%
read_html() %>%
html_nodes("td a") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/" ,.) %>%
str_trim()) %>%
set_names(c("case_id", "case_summary", "date", "product_market", "decision", "case_page"))
### go to each case page and extract the decision text url
output$decision_url <- map2_chr(output$case_page, output$case_id, function(page, id){
print(paste0("Scraping case: ", id))
decision_url <- try(page %>%
read_html() %>%
html_node(".FTpdf") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/" ,.), silent = TRUE)
if(class(decision_url) == "try-error"){
decision_url <- NA_character_
}
return(decision_url)
Sys.sleep(runif(2,1,3))
})
return(output)
})
View(cases_table)
sample(cases_table$decision_url, 20)
str_replace(cases_table$decision_url, "\\/\\/SharedDocs", "/SharedDocs")
cases_table$decision_url <- str_replace(cases_table$decision_url, "\\/\\/SharedDocs", "/SharedDocs")
save(cases_table,
file = paste0("data_repo/germany/1_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.RData"))
write.xlsx(cases_table,
file = paste0("data_repo/germany/1_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.xlsx"))
bka_data <- cases_table
View(cases_table)
bka_data$decision_txt <- map2_chr(bka_data$decision_url, bka_data$case_id, function(dec_pdf, id){
print(paste0("parsing case: ", id))
### nto a website, missing the url
if(!is.na(dec_pdf) & str_detect(dec_pdf, "\\.pdf")){
## parse it
parsed_txt <- try(pdf_text(dec_pdf) %>%
paste(., collapse = "\r\n"), silent = TRUE)
# if couldn't parse it, try ocr
if(class(parsed_txt) == "try-error"){
parsed_txt <- try(tesseract::ocr(dec_pdf) %>%
paste(., collapse = "\r\n"), silent = TRUE)
}
# if yet again it fails, assign NA
if(class(parsed_txt) == "try-error"){
parsed_txt <- NA_character_
}
} else {
## no decision
parsed_txt <- "no decision text"
}
## print str for double checking
str(parsed_txt, nchar.max = 1000)
## rest time for the server
Sys.sleep(runif(2,1,3))
return(parsed_txt)
})
bka_data <- rename(bka_data, parties = case_summary)
### remove all the ocr pages
file.remove(list.files()[str_detect(list.files(), regex("\\.png", ignore_case = TRUE))])
### export it
save(DGComp_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.Rdata"))
write.xlsx(DGComp_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.xlsx"))
### export it
save(bka_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.Rdata"))
write.xlsx(Dbka_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.xlsx"))
write.xlsx(bka_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.xlsx"))
### Save each decision as a .txt file
## decision_repo
if(!dir.exists("data_repo/germany/decision_repo")){
dir.create("data_repo/germany/decision_repo")
}
## write them and save them
map2(DGComp_data$case_id, DGComp_data$decision_txt, function(id, txt) cat(txt,
file = paste0("data_repo/germany/decision_repo/", id, ".txt")))
## write them and save them
map2(bka_data$case_id, bka_data$decision_txt, function(id, txt) cat(txt,
file = paste0("data_repo/germany/decision_repo/", id, ".txt")))
names(bka_data)
## write them and save them
map2(bka_data$case_id, bka_data$decision_txt, function(id, txt) cat(txt, file = paste0("data_repo/germany/decision_repo/", id, ".txt")))
View(bka_data)
cat(txt, file = paste0("data_repo/germany/decision_repo/", id, ".txt"))
## write them and save them
map2(bka_data$case_id, bka_data$decision_txt, function(id, txt){
print(paste0("parsing case: ", id))
cat(txt, file = paste0("data_repo/germany/decision_repo/", id, ".txt"))
})
View(cases_table)
View(bka_data)
## write them and save them
map2(bka_data$case_id, bka_data$decision_txt, function(id, txt){
print(paste0("parsing case: ", id))
cat(txt, file = paste0("data_repo/germany/decision_repo/", str_replace_all(id, "[[:punct:]]", "_"), ".txt"))
})
## write them and save them
map2(bka_data$case_id, bka_data$decision_txt, function(id, txt){
print(paste0("parsing case: ", id))
cat(txt, file = paste0("data_repo/germany/decision_repo/", str_replace_all(id, "\\/", "_"), ".txt"))
})
rm(cases_table)
rm(output)
q()
require(openxlsx)
?write.xlsx
write.xlsx(bka_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.xlsx"))
## Load the relevant packages
require(tidyverse)
write.xlsx(bka_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.xlsx"))
require(xlsx)
xlsx::write.xlsx(bka_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.xlsx"))
write.csv(bka_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.csv"))
write.xlsx(bka_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.xlsx"))
q()
q()
table(bka_data$product_market)
### just regex matching using the product market variable
bka_data %>%
filter(str_detect(product_market, regex("bank|geld|finanz" , ignore_case = TRUE)))
## Load the relevant packages
require(tidyverse)
require(rvest)
require(xlsx)
require(pdftools
require(tidyverse)
require(rvest)
require(xlsx)
require(pdftools)
duct_market, regex("bank|geld|finanz" , ignore_case = TRUE)))
### just regex matching using the product market variable
bka_data %>%
filter(str_detect(product_market, regex("bank|geld|finanz" , ignore_case = TRUE)))
### just regex matching using the product market variable
bka_filtered <- bka_data %>%
filter(str_detect(product_market, regex("bank|geld|finanz" , ignore_case = TRUE)))
### just regex matching using the product market variable
bka_filtered <- bka_data %>%
filter(str_detect(product_market, regex("bank|geld|finanz" , ignore_case = TRUE))) %>%
mutate(hc_finished = NA,
relevant = NA) %>%
select(hc_finished, everything())
save(bka_filtered,
file = paste0("data_repo/germany/3_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_filtered_mergerCases.Rdata"))
write.xlsx(bka_filtered,
file = paste0("data_repo/germany/3_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_filtered_mergerCases.xlsx"))
write.csv(bka_filtered,
file = paste0("data_repo/germany/3_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_filtered_mergerCases.csv"))
### just regex matching using the product market variable
bka_filtered <- bka_data %>%
filter(str_detect(product_market, regex("bank|geld|finanz|kredit" , ignore_case = TRUE))) %>%
mutate(hc_finished = NA,
relevant = NA) %>%
select(hc_finished, everything())
### just regex matching using the product market variable
bka_filtered <- bka_data %>%
filter(str_detect(product_market, regex("bank|geld|finanz|kredit" , ignore_case = TRUE)) | str_detect(parties, regex("bank|geld|finanz|kredit" , ignore_case = TRUE))) %>%
mutate(hc_finished = NA,
relevant = NA) %>%
select(hc_finished, everything())
View(bka_filtered)
## set the base page
query_url <- "https://www.bundeskartellamt.de/SiteGlobals/Forms/Suche/Entscheidungssuche_Formular.html?nn=3589936&cl2Categories_Arbeitsbereich=Fusionskontrolle&resultsPerPage=15&sortOrder=score+desc%2C+dateOfIssue_dt+desc"
## subpage vector
subpages_url <- query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric() %>%
max(.) %>%
seq_len(.) %>%
paste0("https://www.bundeskartellamt.de/SiteGlobals/Forms/Suche/Entscheidungssuche_Formular.html?nn=3589936&cl2Categories_Format=Entscheidungen&gts=3598628_list%253Dheader_text_sort%252Basc&gtp=3598628_list%253D", .,"&cl2Categories_Arbeitsbereich=Fusionskontrolle&resultsPerPage=45&sortOrder=score+desc%2C+dateOfIssue_dt+desc")
## set the base page
query_url <- "https://www.bundeskartellamt.de/SiteGlobals/Forms/Suche/Entscheidungssuche_Formular.html?nn=3589936&gts=3598628_list%253Dheader_text_sort%252Basc&cl2Categories_Arbeitsbereich=Fusionskontrolle&resultsPerPage=45&sortOrder=score+desc%2C+dateOfIssue_dt+desc"
query_url <- "https://www.bundeskartellamt.de/SiteGlobals/Forms/Suche/Entscheidungssuche_Formular.html?nn=3589936&gts=3598628_list%253Dheader_text_sort%252Basc&cl2Categories_Arbeitsbereich=Fusionskontrolle&resultsPerPage=45&sortOrder=score+desc%2C+dateOfIssue_dt+desc"
## subpage vector
subpages_url <- query_url %>%
read_html() %>%
html_nodes(xpath = '//li[following-sibling::li[@class = "forward"]]/a') %>%
html_text() %>%
as.numeric() %>%
max(.) %>%
seq_len(.) %>%
paste0("https://www.bundeskartellamt.de/SiteGlobals/Forms/Suche/Entscheidungssuche_Formular.html?nn=3589936&gts=3598628_list%253Dheader_text_sort%252Basc&gtp=3598628_list%253D", .,"&cl2Categories_Arbeitsbereich=Fusionskontrolle&resultsPerPage=45&sortOrder=score+desc%2C+dateOfIssue_dt+desc")
### scrape the case table
cases_table <- map_df(subpages_url, function(page){
### extract the cases from the table
output <- page %>%
read_html() %>%
html_node("#searchResultTable") %>%
html_table() %>%
as_tibble() %>%
mutate(case_page = page %>%
read_html() %>%
html_nodes("td a") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de/" ,.) %>%
str_trim()) %>%
set_names(c("case_id", "parties", "date", "product_market", "decision", "case_page"))
### go to each case page and extract the decision text url
output$decision_url <- map2_chr(output$case_page, output$case_id, function(page, id){
print(paste0("Scraping case: ", id))
decision_url <- try(page %>%
read_html() %>%
html_node(".FTpdf") %>%
html_attr("href") %>%
paste0("https://www.bundeskartellamt.de" ,.), silent = TRUE)
if(class(decision_url) == "try-error"){
decision_url <- NA_character_
}
return(decision_url)
Sys.sleep(runif(2,1,3))
})
return(output)
})
View(cases_table)
save(cases_table,
file = paste0("data_repo/germany/1_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.RData"))
write.xlsx(cases_table,
file = paste0("data_repo/germany/1_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.xlsx"))
bka_data <- cases_table
bka_data$decision_txt <- map2_chr(bka_data$decision_url, bka_data$case_id, function(dec_pdf, id){
print(paste0("parsing case: ", id))
### nto a website, missing the url
if(!is.na(dec_pdf) & str_detect(dec_pdf, "\\.pdf")){
## parse it
parsed_txt <- try(pdf_text(dec_pdf) %>%
paste(., collapse = "\r\n"), silent = TRUE)
# if couldn't parse it, try ocr
if(class(parsed_txt) == "try-error"){
parsed_txt <- try(tesseract::ocr(dec_pdf) %>%
paste(., collapse = "\r\n"), silent = TRUE)
}
# if yet again it fails, assign NA
if(class(parsed_txt) == "try-error"){
parsed_txt <- NA_character_
}
} else {
## no decision
parsed_txt <- "no decision text"
}
## print str for double checking
str(parsed_txt, nchar.max = 1000)
## rest time for the server
Sys.sleep(runif(2,1,3))
return(parsed_txt)
})
### remove all the ocr pages
file.remove(list.files()[str_detect(list.files(), regex("\\.png", ignore_case = TRUE))])
head(bka_data$decision_txt, 2)
### export it
save(bka_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.Rdata"))
write.xlsx(bka_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.xlsx"))
write.csv(bka_data,
file = paste0("data_repo/germany/2_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_merger_cases.csv"))
## write them and save them
map2(bka_data$case_id, bka_data$decision_txt, function(id, txt){
print(paste0("parsing case: ", id))
cat(txt, file = paste0("data_repo/germany/decision_repo/", str_replace_all(str_trim(id), "\\/|;|\\s+", "_"), ".txt"))
})
### just regex matching using the product market variable
bka_filtered <- bka_data %>%
filter(str_detect(product_market, regex("bank|geld|finanz|kredit" , ignore_case = TRUE)) | str_detect(parties, regex("bank|geld|finanz|kredit" , ignore_case = TRUE))) %>%
mutate(hc_finished = NA,
relevant = NA) %>%
select(hc_finished, everything())
### export it
save(bka_filtered,
file = paste0("data_repo/germany/3_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_filtered_mergerCases.Rdata"))
write.xlsx(bka_filtered,
file = paste0("data_repo/germany/3_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_filtered_mergerCases.xlsx"))
write.csv(bka_filtered,
file = paste0("data_repo/germany/3_", str_extract(Sys.time(), "^.*?(?=\\s)"), "_","germany_filtered_mergerCases.csv"))
q()
